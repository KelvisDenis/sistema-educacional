// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistemaEducacional.Infraestrutura;

#nullable disable

namespace SistemaEducacional.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20240413215506_seventhMigration")]
    partial class seventhMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistemaEducacional.Models.AlunoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<DateTime?>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int?>("IdNota")
                        .HasColumnType("integer");

                    b.Property<int?>("IdTurma")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SenhaTemporaria")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<int?>("TurmaModelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TurmaModelId");

                    b.ToTable("AlunoModels");
                });

            modelBuilder.Entity("SistemaEducacional.Models.DirecaoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<DateTime?>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Senha")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DirecaoModels");
                });

            modelBuilder.Entity("SistemaEducacional.Models.DisciplinaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataCriacao")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("DisciplinaModels");
                });

            modelBuilder.Entity("SistemaEducacional.Models.DocenteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<DateTime?>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Formacao")
                        .HasColumnType("text");

                    b.Property<int?>("IdTurma")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SenhaTemporaria")
                        .HasColumnType("text");

                    b.Property<int?>("TurmaModelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TurmaModelId");

                    b.ToTable("DocenteModels");
                });

            modelBuilder.Entity("SistemaEducacional.Models.NotasModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlunoModelId")
                        .HasColumnType("integer");

                    b.Property<int?>("IdAluno")
                        .HasColumnType("integer");

                    b.Property<int?>("IdDisciplina")
                        .HasColumnType("integer");

                    b.Property<double?>("Nota")
                        .HasColumnType("double precision");

                    b.Property<string>("Tipo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AlunoModelId");

                    b.ToTable("NotasModels");
                });

            modelBuilder.Entity("SistemaEducacional.Models.TurmaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AnoTurma")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NomeTurma")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TurmaModels");
                });

            modelBuilder.Entity("SistemaEducacional.Models.AlunoModel", b =>
                {
                    b.HasOne("SistemaEducacional.Models.TurmaModel", null)
                        .WithMany("Alunos")
                        .HasForeignKey("TurmaModelId");
                });

            modelBuilder.Entity("SistemaEducacional.Models.DocenteModel", b =>
                {
                    b.HasOne("SistemaEducacional.Models.TurmaModel", null)
                        .WithMany("Docentes")
                        .HasForeignKey("TurmaModelId");
                });

            modelBuilder.Entity("SistemaEducacional.Models.NotasModel", b =>
                {
                    b.HasOne("SistemaEducacional.Models.AlunoModel", null)
                        .WithMany("Notas")
                        .HasForeignKey("AlunoModelId");
                });

            modelBuilder.Entity("SistemaEducacional.Models.AlunoModel", b =>
                {
                    b.Navigation("Notas");
                });

            modelBuilder.Entity("SistemaEducacional.Models.TurmaModel", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Docentes");
                });
#pragma warning restore 612, 618
        }
    }
}
